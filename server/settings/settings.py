"""
Django settings for prj_revenue_hive project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url
import django_heroku
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4(2j2x+h1xws3dnql)=mg10()11k1#nb5p9kp=jq9-hle07t#v'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'www.revenuehive.io',
    'revenuehive.io',
]


# Application definition

INSTALLED_APPS = [
    'landing_page',
    'app_profiles',
    'app_posts',
    'app_comments',
    'app_votes',
    'app_communities',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'corsheaders',
    'rest_framework.authtoken', #new
]


# CORS_ORIGIN_WHITELIST = [
#     "http://localhost:3000",
    # Add other origins as needed
# ]



MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]



ROOT_URLCONF = 'prj_revenue_hive.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'prj_revenue_hive.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# This configuration uses the dj_database_url package, which simplifies the process of configuring Django databases, especially for production environments. On Heroku, it will use the DATABASE_URL environment variable to configure the database. If the variable is not present (i.e., you're running locally), it falls back to using SQLite.
DATABASES = {
    'default': dj_database_url.config(default=os.environ.get('DATABASE_URL'))
}

# If not on Heroku, use a local SQLite database
if not DATABASES['default']:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / "db.sqlite3",
        }
    }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/New_York'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

# static Directory:

# This is where you store your static files (CSS, JavaScript, images) during development.
# In your app directories, you might have a static folder where you keep the app-specific static files.
# Your main project can also have a static directory for global static files (like the styles.min.css file you mentioned).
# In templates, you refer to these files using {% static 'path/to/file' %}.

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# LOGIN_REDIRECT_URL= "/posts/"

# LOGOUT_REDIRECT_URL= "/"

# Mail trap send email - sends to sandbox
EMAIL_BACKEND = 'prj_revenue_hive.backends.email_backend.EmailBackend'

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_FROM = 'support@revenuehive.io'
EMAIL_HOST_USER = 'aleisha@revenuehive.io'
EMAIL_HOST_PASSWORD = 'pzkwqiryoimbtrbk'
EMAIL_PORT = 587
EMAIL_USE_TLS = True




MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
django_heroku.settings(locals())